import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
df = pd.read_csv('/content/drive/MyDrive/New/archive (4).zip')

def isStr(obj):
  try:
    float(obj)
    return False
  except:
    return True


to_drop = df[df['Annual_Rainfall'].apply(isStr)].index

df = df.drop(to_drop)


X = df.drop(['Yield','Production','Area'],axis=1)
y = df['Yield']
from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test = train_test_split(X, y, test_size=0.2, random_state=42)

from sklearn.preprocessing import OneHotEncoder, StandardScaler
from sklearn.compose import make_column_transformer

ohe = OneHotEncoder(drop='first', handle_unknown='ignore')
scaler = StandardScaler()

preprocessor = make_column_transformer(
    (ohe, [0, 2, 3]),
    (scaler, [1, 4, 5, 6]),
    remainder='passthrough'
)


X_train_dummy = preprocessor.fit_transform(X_train)
X_test_dummy = preprocessor.fit_transform(X_test)


from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score
import numpy as np
from sklearn.linear_model import LinearRegression,Lasso,Ridge
from sklearn.neighbors import KNeighborsRegressor
from sklearn.tree import DecisionTreeRegressor

models = {
    'lr': LinearRegression(),
    'lss': Lasso(),
    'rg': Ridge(),
    'knr': KNeighborsRegressor(),
    'dtr': DecisionTreeRegressor()
}

for name, mod in models.items():
    mod.fit(X_train_dummy, y_train)
    y_pred = mod.predict(X_test_dummy)

    mae = mean_absolute_error(y_test, y_pred)
    mse = mean_squared_error(y_test, y_pred)
    rmse = np.sqrt(mse)
    r2 = r2_score(y_test, y_pred)

    print(f"{name} MAE: {mae}, RMSE: {rmse}, R2 Score: {r2}")


dtr = DecisionTreeRegressor()
dtr.fit(X_train_dummy,y_train)
dtr.predict(X_test_dummy)


def Prediction(Crop, Crop_Year, Season, State, Annual_Rainfall, Fertilizer, Pesticide):
    features = np.array([[Crop, Crop_Year, Season, State, Annual_Rainfall, Fertilizer, Pesticide]])
    transformed_features = preprocessor.transform(features)
    predicted_value = dtr.predict(transformed_features).reshape(1, -1)
    return predicted_value[0]

Crop = "Groundnut"
Crop_Year = 2011
Season = "Kharif"
State = "Goa"
Annual_Rainfall = 3340.395455
Fertilizer = 59804.64
Pesticide = 117.81

# this is the predicted result from the unseen data
result = Prediction(Crop, Crop_Year, Season, State, Annual_Rainfall, Fertilizer, Pesticide)


import pickle
pickle.dump(dtr,open('crop_yeild_prediction.pkl','wb'))

pickle.dump(preprocessor,open('preprocessor.pkl','wb'))
